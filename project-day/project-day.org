#+Title: VisiLake: Self-Service Data Lake Exploration & Analysis on AWS
#+Subtitle: SSE Capstone Group #8, University of Regina
#+Author: Ben Hajdukiewicz, Daniil Aleshechkin, Adam Metz
# #+OPTIONS: num:nil
# #+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
# #+OPTIONS: toc:nil

* Meet the Team
- Adam Metz (Full-stack Developer)
- Daniil Aleshechkin (Full-stack Developer)
- Ben Hajdukiewicz (Team Lead, Full-stack Developer)

* Project Introduction
*Project Client:* K + S Potash Canada

*Client Challenge:* Huge amount of data with no means for aggregation, processing, exploration. Currently lots of data is transferred around in bulky Excel spreadsheets.

*Project Overview:*
VisiLake aims to address critical challenges and opportunities in data science and data management within the organization.

*Goal:* Improve operational efficiency, data uniformity, and environmental sustainability

*How:* Create a management tool for data pre-processing, exploratory data analysis (EDA), and data management

[[../vlog2/logo.svg]]

* What is a Data Lake?

- *Collection of Data:* Storage of all types of data
  - structured, semi-structured, and unstructuredâ€”are stored in their raw form.

- *Flexible Storage:* Unlike traditional databases, data lakes can handle various data formats such as =csv= =json= =parquet=, etc. without needing predefined schemas

- *Scalability:* Organizations produce gigabytes of data per day, the storage and analysis solution must scale with that data growth

- *Analytics Hub:* Data lakes serve as a hub for advanced analytics, providing a rich source of data for machine learning, AI, and other analytics tools to extract valuable insights.

* Demo2
#+BEGIN_EXPORT html
<section data-background-image="./visilake.png" data-background-size="75% auto"></section>
#+END_EXPORT

* Technologies Used

- Application
  - React
  - Tailwind CSS
  - tRPC
  - Rust

- AWS
  - DynamoDB
  - Simple Storage Service
  - Simple Queue Service
  - Simple Notification Service
  - Elastic Compute Cloud
  - Athena + Glue

- Deployment
  - Nix
  - Terraform
  - Docker
  - Localstack

# * Architecture
* Demo3

#+BEGIN_EXPORT html
<section data-background-image="./arch.png" data-background-size="75% auto"></section>
#+END_EXPORT
# [[file:./arch.png]]

* [[http://localhost:45139][Demo]]

*Job Title:* NO2 Sensor Routine Inspection

*Job Desc:* Conducting a routine inspection of NO2 data originating from source tag 1001-FI-50230 to ensure optimal performance and check for any potential issues.

*Source Tag:* 1001-FI-50230

*Analysis Type:* Exploratory Data Analysis


* Demo1
#+BEGIN_EXPORT html
<section data-background-iframe="http://localhost:45139" data-background-interactive></section>
#+END_EXPORT

#+BEGIN_EXPORT html
<section data-background-iframe="data.html" data-background-interactive></section>
#+END_EXPORT

* Future Work

- Broaden and enhance the variety of available data analysis methods
- Provide users the option to fine tune and tailor each data analysis method
- Integration with KSPC's data lake and authentication system

* Q/A
